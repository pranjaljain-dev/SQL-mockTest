-- Basic Queries
-- 1. Retrieve the names and emails of all customers.
select
    name,
    email
from
    customers;

-- 2. List all products along with their categories and prices.
select
    name,
    category,
    price
from
    products;

-- 3. Find the total number of products available in the 'Electronics' category.
select
    count(productid) as total_products
from
    products
where
    category = 'Electronics';

-- 4. Display all orders placed by customers from the 'United States.'
select
    o.orderid,
    o.orderdate,
    o.totalamount,
    c.customerid,
    c.name,
    c.country
from
    orders o
    join customers c on o.customerid = c.customerid
where
    country = 'United States';

-- Intermediate Queries
-- 5. Calculate the total revenue generated from all orders.
select
    sum(totalamount) as revenue
from
    orders;

-- 6. Find the name of the customer who placed the order with the highest total amount.
select
    c.name
from
    customers c
    join orders o on c.customerid = o.customerid
where
    o.totalamount = (
        select
            max(totalamount)
        from
            orders
    );

-- 7. Retrieve all products that have less than 50 units in stock.
select
    name
from
    products
where
    stock < 50;

-- 8. List all reviews with ratings of 4 or higher.
select
    reviewtext,
    rating
from
    reviews
where
    rating >= 4;

-- Joins
-- 9. Write a query to display all orders along with the customer name and email.
select
    o.orderid,
    o.orderdate,
    o.totalamount,
    c.name,
    c.email
from
    orders o
    join customers c on o.customerid = c.customerid;

-- 10. List all reviews along with the product name and customer name.
select
    r.reviewtext,
    p.name as product_name,
    c.name as customer_name
from
    reviews r
    join products p on r.productid = p.productid
    join customers c on r.customerid = c.customerid;

-- Aggregations
-- 11. Calculate the average rating for each product.
select
    p.name,
    avg(rating) as average_rating
from
    reviews r
    join products p on r.productid = p.productid
group by
    p.name

 -- 12. Find the total revenue generated by each product category.
select
    category,
    sum(price) as revenue
from
    products
group by
    category;

-- 13. Determine the country with the highest number of customers.
select
    country,
    count(*) as highest_customers
from
    customers
group by
    country;

-- Filtering
-- 14. Retrieve all orders placed after March 1, 2023.
select
    orderid
from
    orders
where
    orderdate > '2023-03-01';

-- 15. Display all shipments that are still 'In Transit.'
select
    *
from
    shipping
where
    status = 'In Transit';

-- Advanced Queries
-- 16. Identify the top-rated product based on average rating.
select
    p.name,
    avg(rating) as average_rating
from
    reviews r
    join products p on r.productid = p.productid
group by
    p.name
order by
    average_rating desc
limit
    1;

-- 17. List all customers who have written at least one review.
select
    distinct c.name
from
    reviews r
    join customers c on r.customerid = c.customerid;

-- 18. Find all products that have been purchased but never reviewed.
select
    p.name
from
    products p
    left join reviews r on p.productid = r.productid
where
    r.productid is null;

-- Subqueries
-- 19. Write a query to find the product with the highest total sales (quantity * price).
select
    p.name as product_name,
    o.totalamount as total_sales
from
    products p
    join orders o on p.price = o.totalamount / (
        select
            count(*)
        from
            products
    )
order by
    total_sales desc
limit
    1;

-- 20. Retrieve all products that have not been purchased yet.
select
    p.name as product_name
from
    products p
    left join orders o on p.productid = o.orderid
where
    o.orderid is null;
